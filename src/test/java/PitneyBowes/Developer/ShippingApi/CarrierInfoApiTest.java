/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package PitneyBowes.Developer.ShippingApi;

import PitneyBowes.Developer.ApiException;
import org.openapitools.client.model.Carrier;
import org.openapitools.client.model.CarrierFacilityRequest;
import org.openapitools.client.model.CarrierFacilityResponse;
import org.openapitools.client.model.CarrierRule;
import org.openapitools.client.model.CrossBorderQuotesErrors;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ISOCountryCode;
import org.openapitools.client.model.InlineResponse200;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CarrierInfoApi
 */
@Ignore
public class CarrierInfoApiTest {

    private final CarrierInfoApi api = new CarrierInfoApi();

    
    /**
     * Find Carrier Facilities
     *
     * This operation locates Post Offices and other facilities for a given carrier. You can use this operation, for example, to locate all USPS Post Offices near to a given postal code.If you use the Standard Return API and if you use the option to print a QR code, use this API to locate facilities where the buyer can print the label from the QR code.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCarrierFacilitiesTest() throws ApiException {
        CarrierFacilityRequest carrierFacilityRequest = null;
        Boolean xPBUnifiedErrorStructure = null;
        CarrierFacilityResponse response = api.getCarrierFacilities(carrierFacilityRequest, xPBUnifiedErrorStructure);

        // TODO: test validations
    }
    
    /**
     * This operation retrieves a carrier&#39;s license agreement.
     *
     * This operation retrieves a carrier&#39;s license agreement. The operation is used in the [Carrier Registration Tutorial](https://shipping.pitneybowes.com/carrier-registration.html).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCarrierLicenseAgreementTest() throws ApiException {
        String carrier = null;
        ISOCountryCode originCountryCode = null;
        Boolean xPBUnifiedErrorStructure = null;
        InlineResponse200 response = api.getCarrierLicenseAgreement(carrier, originCountryCode, xPBUnifiedErrorStructure);

        // TODO: test validations
    }
    
    /**
     * Retrieves the rules governing the carrier&#39;s services.
     *
     * This operation retrieves the rules governing the carrier&#39;s services, including the available parcel types and the limits on weights and dimensions. **This API currently returns rules only for USPS** . Find more information at [Get Carrier Rules](https://shipping.pitneybowes.com/api/get-carrier-rules.html)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCarrierServiceRulesTest() throws ApiException {
        Carrier carrier = null;
        ISOCountryCode originCountryCode = null;
        ISOCountryCode destinationCountryCode = null;
        Boolean xPBUnifiedErrorStructure = null;
        String rateTypeId = null;
        String futureShipmentDate = null;
        OffsetDateTime returnShipment = null;
        Boolean compactResponse = null;
        CarrierRule response = api.getCarrierServiceRules(carrier, originCountryCode, destinationCountryCode, xPBUnifiedErrorStructure, rateTypeId, futureShipmentDate, returnShipment, compactResponse);

        // TODO: test validations
    }
    
    /**
     * This operation returns a list of supported destination countries to which the carrier offers international shipping services.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCarrierSupportedDestinationTest() throws ApiException {
        Carrier carrier = null;
        ISOCountryCode originCountryCode = null;
        Boolean xPBUnifiedErrorStructure = null;
        List<Object> response = api.getCarrierSupportedDestination(carrier, originCountryCode, xPBUnifiedErrorStructure);

        // TODO: test validations
    }
    
}
