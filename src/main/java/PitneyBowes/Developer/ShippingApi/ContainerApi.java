/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package PitneyBowes.Developer.ShippingApi;

import PitneyBowes.Developer.ApiCallback;
import PitneyBowes.Developer.ApiClient;
import PitneyBowes.Developer.ApiException;
import PitneyBowes.Developer.ApiResponse;
import PitneyBowes.Developer.Configuration;
import PitneyBowes.Developer.Pair;
import PitneyBowes.Developer.ProgressRequestBody;
import PitneyBowes.Developer.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ContainerManifestResponse;
import org.openapitools.client.model.Manifest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ContainerApi {
    private ApiClient localVarApiClient;

    public ContainerApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ContainerApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getContainerizedParcelsLabels
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getContainerizedParcelsLabelsCall(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = manifest;

        // create path and map variables
        String localVarPath = "/v1/container-manifest";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPBUnifiedErrorStructure != null) {
            localVarHeaderParams.put("X-PB-UnifiedErrorStructure", localVarApiClient.parameterToString(xPBUnifiedErrorStructure));
        }

        if (xPBTransactionId != null) {
            localVarHeaderParams.put("X-PB-TransactionId", localVarApiClient.parameterToString(xPBTransactionId));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oAuth2ClientCredentials" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getContainerizedParcelsLabelsValidateBeforeCall(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'xPBTransactionId' is set
        if (xPBTransactionId == null) {
            throw new ApiException("Missing the required parameter 'xPBTransactionId' when calling getContainerizedParcelsLabels(Async)");
        }
        
        // verify the required parameter 'manifest' is set
        if (manifest == null) {
            throw new ApiException("Missing the required parameter 'manifest' when calling getContainerizedParcelsLabels(Async)");
        }
        

        okhttp3.Call localVarCall = getContainerizedParcelsLabelsCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, _callback);
        return localVarCall;

    }

    /**
     * Create Container Manifest Label
     * This operation prints a label for the shipment of containerized parcels destined for a Pitney Bowes warehouse facility from the client location.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ContainerManifestResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ContainerManifestResponse getContainerizedParcelsLabels(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        ApiResponse<ContainerManifestResponse> localVarResp = getContainerizedParcelsLabelsWithHttpInfo(xPBTransactionId, manifest, xPBUnifiedErrorStructure);
        return localVarResp.getData();
    }

    /**
     * Create Container Manifest Label
     * This operation prints a label for the shipment of containerized parcels destined for a Pitney Bowes warehouse facility from the client location.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ApiResponse&lt;ContainerManifestResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ContainerManifestResponse> getContainerizedParcelsLabelsWithHttpInfo(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        okhttp3.Call localVarCall = getContainerizedParcelsLabelsValidateBeforeCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, null);
        Type localVarReturnType = new TypeToken<ContainerManifestResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Container Manifest Label (asynchronously)
     * This operation prints a label for the shipment of containerized parcels destined for a Pitney Bowes warehouse facility from the client location.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getContainerizedParcelsLabelsAsync(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback<ContainerManifestResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getContainerizedParcelsLabelsValidateBeforeCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, _callback);
        Type localVarReturnType = new TypeToken<ContainerManifestResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
