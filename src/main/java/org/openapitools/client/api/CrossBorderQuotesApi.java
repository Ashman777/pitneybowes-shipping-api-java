/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CrossBorderQuotesErrors;
import org.openapitools.client.model.CrossBorderQuotesRequest;
import org.openapitools.client.model.CrossBorderQuotesResponse;
import org.openapitools.client.model.Manifest;
import org.openapitools.client.model.ParcelProtectionPolicyResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CrossBorderQuotesApi {
    private ApiClient localVarApiClient;

    public CrossBorderQuotesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CrossBorderQuotesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getCrossBorderQuotes
     * @param crossBorderQuotesRequest  (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCrossBorderQuotesCall(CrossBorderQuotesRequest crossBorderQuotesRequest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = crossBorderQuotesRequest;

        // create path and map variables
        String localVarPath = "/v1/crossborder/checkout/quotes";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPBUnifiedErrorStructure != null) {
            localVarHeaderParams.put("X-PB-UnifiedErrorStructure", localVarApiClient.parameterToString(xPBUnifiedErrorStructure));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oAuth2ClientCredentials" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCrossBorderQuotesValidateBeforeCall(CrossBorderQuotesRequest crossBorderQuotesRequest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'crossBorderQuotesRequest' is set
        if (crossBorderQuotesRequest == null) {
            throw new ApiException("Missing the required parameter 'crossBorderQuotesRequest' when calling getCrossBorderQuotes(Async)");
        }
        

        okhttp3.Call localVarCall = getCrossBorderQuotesCall(crossBorderQuotesRequest, xPBUnifiedErrorStructure, _callback);
        return localVarCall;

    }

    /**
     * Cross-Border Quotes
     * This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
     * @param crossBorderQuotesRequest  (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return CrossBorderQuotesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public CrossBorderQuotesResponse getCrossBorderQuotes(CrossBorderQuotesRequest crossBorderQuotesRequest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        ApiResponse<CrossBorderQuotesResponse> localVarResp = getCrossBorderQuotesWithHttpInfo(crossBorderQuotesRequest, xPBUnifiedErrorStructure);
        return localVarResp.getData();
    }

    /**
     * Cross-Border Quotes
     * This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
     * @param crossBorderQuotesRequest  (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ApiResponse&lt;CrossBorderQuotesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CrossBorderQuotesResponse> getCrossBorderQuotesWithHttpInfo(CrossBorderQuotesRequest crossBorderQuotesRequest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        okhttp3.Call localVarCall = getCrossBorderQuotesValidateBeforeCall(crossBorderQuotesRequest, xPBUnifiedErrorStructure, null);
        Type localVarReturnType = new TypeToken<CrossBorderQuotesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Cross-Border Quotes (asynchronously)
     * This operation provides an estimate of the duties, taxes, and transportation costs for the items in a buyer&#39;s online shopping basket. The API calculates how many separate parcels are required to ship the items and estimates costs. The API checks each item&#39;s eligibility to clear customs and returns the quote for eligible items. To look for futher info please look into [Cross-Border Quotes](https://shipping.pitneybowes.com/api/post-quotes.html#)
     * @param crossBorderQuotesRequest  (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCrossBorderQuotesAsync(CrossBorderQuotesRequest crossBorderQuotesRequest, Boolean xPBUnifiedErrorStructure, final ApiCallback<CrossBorderQuotesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCrossBorderQuotesValidateBeforeCall(crossBorderQuotesRequest, xPBUnifiedErrorStructure, _callback);
        Type localVarReturnType = new TypeToken<CrossBorderQuotesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for predictedHSCode
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call predictedHSCodeCall(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = manifest;

        // create path and map variables
        String localVarPath = "/v1/crossborder/hs-classification/items";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPBUnifiedErrorStructure != null) {
            localVarHeaderParams.put("X-PB-UnifiedErrorStructure", localVarApiClient.parameterToString(xPBUnifiedErrorStructure));
        }

        if (xPBTransactionId != null) {
            localVarHeaderParams.put("X-PB-TransactionId", localVarApiClient.parameterToString(xPBTransactionId));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oAuth2ClientCredentials" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call predictedHSCodeValidateBeforeCall(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'xPBTransactionId' is set
        if (xPBTransactionId == null) {
            throw new ApiException("Missing the required parameter 'xPBTransactionId' when calling predictedHSCode(Async)");
        }
        
        // verify the required parameter 'manifest' is set
        if (manifest == null) {
            throw new ApiException("Missing the required parameter 'manifest' when calling predictedHSCode(Async)");
        }
        

        okhttp3.Call localVarCall = predictedHSCodeCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, _callback);
        return localVarCall;

    }

    /**
     * Predicts the HS Code for a parcel
     * This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ParcelProtectionPolicyResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ParcelProtectionPolicyResponse predictedHSCode(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        ApiResponse<ParcelProtectionPolicyResponse> localVarResp = predictedHSCodeWithHttpInfo(xPBTransactionId, manifest, xPBUnifiedErrorStructure);
        return localVarResp.getData();
    }

    /**
     * Predicts the HS Code for a parcel
     * This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ApiResponse&lt;ParcelProtectionPolicyResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ParcelProtectionPolicyResponse> predictedHSCodeWithHttpInfo(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        okhttp3.Call localVarCall = predictedHSCodeValidateBeforeCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, null);
        Type localVarReturnType = new TypeToken<ParcelProtectionPolicyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Predicts the HS Code for a parcel (asynchronously)
     * This operation predicts the HS Code for a parcel being shipped internationally and gives the level of confidence in the prediction.
     * @param xPBTransactionId Required. A unique identifier for the transaction, up to 25 characters. (required)
     * @param manifest manifest (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call predictedHSCodeAsync(String xPBTransactionId, Manifest manifest, Boolean xPBUnifiedErrorStructure, final ApiCallback<ParcelProtectionPolicyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = predictedHSCodeValidateBeforeCall(xPBTransactionId, manifest, xPBUnifiedErrorStructure, _callback);
        Type localVarReturnType = new TypeToken<ParcelProtectionPolicyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
