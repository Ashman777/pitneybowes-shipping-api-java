/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Address;
import org.openapitools.client.model.AddressSuggestionResponse;
import org.openapitools.client.model.AddressVerifySuggest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AddressValidationApi {
    private ApiClient localVarApiClient;

    public AddressValidationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AddressValidationApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for verifyAddress
     * @param address Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param minimalAddressValidation When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call verifyAddressCall(Address address, Boolean xPBUnifiedErrorStructure, Boolean minimalAddressValidation, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = address;

        // create path and map variables
        String localVarPath = "/v1/addresses/verify";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (minimalAddressValidation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minimalAddressValidation", minimalAddressValidation));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPBUnifiedErrorStructure != null) {
            localVarHeaderParams.put("X-PB-UnifiedErrorStructure", localVarApiClient.parameterToString(xPBUnifiedErrorStructure));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oAuth2ClientCredentials" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call verifyAddressValidateBeforeCall(Address address, Boolean xPBUnifiedErrorStructure, Boolean minimalAddressValidation, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'address' is set
        if (address == null) {
            throw new ApiException("Missing the required parameter 'address' when calling verifyAddress(Async)");
        }
        

        okhttp3.Call localVarCall = verifyAddressCall(address, xPBUnifiedErrorStructure, minimalAddressValidation, _callback);
        return localVarCall;

    }

    /**
     * Address validation
     * Address validation verifies and cleanses postal addresses within the United States to help ensure packages are rated accurately and shipments arrive at their final destinations on time.
     * @param address Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param minimalAddressValidation When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check. (optional)
     * @return Address
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public Address verifyAddress(Address address, Boolean xPBUnifiedErrorStructure, Boolean minimalAddressValidation) throws ApiException {
        ApiResponse<Address> localVarResp = verifyAddressWithHttpInfo(address, xPBUnifiedErrorStructure, minimalAddressValidation);
        return localVarResp.getData();
    }

    /**
     * Address validation
     * Address validation verifies and cleanses postal addresses within the United States to help ensure packages are rated accurately and shipments arrive at their final destinations on time.
     * @param address Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param minimalAddressValidation When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check. (optional)
     * @return ApiResponse&lt;Address&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Address> verifyAddressWithHttpInfo(Address address, Boolean xPBUnifiedErrorStructure, Boolean minimalAddressValidation) throws ApiException {
        okhttp3.Call localVarCall = verifyAddressValidateBeforeCall(address, xPBUnifiedErrorStructure, minimalAddressValidation, null);
        Type localVarReturnType = new TypeToken<Address>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Address validation (asynchronously)
     * Address validation verifies and cleanses postal addresses within the United States to help ensure packages are rated accurately and shipments arrive at their final destinations on time.
     * @param address Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param minimalAddressValidation When set to true, the complete address (delivery line and last line) is validated but only the last line (city, state, and postal code) would be changed by the validation check. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call verifyAddressAsync(Address address, Boolean xPBUnifiedErrorStructure, Boolean minimalAddressValidation, final ApiCallback<Address> _callback) throws ApiException {

        okhttp3.Call localVarCall = verifyAddressValidateBeforeCall(address, xPBUnifiedErrorStructure, minimalAddressValidation, _callback);
        Type localVarReturnType = new TypeToken<Address>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for verifyAndSuggestAddress
     * @param returnSuggestions To return suggested addresses, set this to true. (required)
     * @param addressVerifySuggest Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call verifyAndSuggestAddressCall(String returnSuggestions, AddressVerifySuggest addressVerifySuggest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = addressVerifySuggest;

        // create path and map variables
        String localVarPath = "/v1/addresses/verify-suggest";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (returnSuggestions != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("returnSuggestions", returnSuggestions));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (xPBUnifiedErrorStructure != null) {
            localVarHeaderParams.put("X-PB-UnifiedErrorStructure", localVarApiClient.parameterToString(xPBUnifiedErrorStructure));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "oAuth2ClientCredentials" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call verifyAndSuggestAddressValidateBeforeCall(String returnSuggestions, AddressVerifySuggest addressVerifySuggest, Boolean xPBUnifiedErrorStructure, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'returnSuggestions' is set
        if (returnSuggestions == null) {
            throw new ApiException("Missing the required parameter 'returnSuggestions' when calling verifyAndSuggestAddress(Async)");
        }
        
        // verify the required parameter 'addressVerifySuggest' is set
        if (addressVerifySuggest == null) {
            throw new ApiException("Missing the required parameter 'addressVerifySuggest' when calling verifyAndSuggestAddress(Async)");
        }
        

        okhttp3.Call localVarCall = verifyAndSuggestAddressCall(returnSuggestions, addressVerifySuggest, xPBUnifiedErrorStructure, _callback);
        return localVarCall;

    }

    /**
     * Address Suggestion
     * This operation returns suggested addresses. Use this if the [Address Validation API](https://shipping.pitneybowes.com/api/post-address-verify.html) call has returned an error.
     * @param returnSuggestions To return suggested addresses, set this to true. (required)
     * @param addressVerifySuggest Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return AddressSuggestionResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public AddressSuggestionResponse verifyAndSuggestAddress(String returnSuggestions, AddressVerifySuggest addressVerifySuggest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        ApiResponse<AddressSuggestionResponse> localVarResp = verifyAndSuggestAddressWithHttpInfo(returnSuggestions, addressVerifySuggest, xPBUnifiedErrorStructure);
        return localVarResp.getData();
    }

    /**
     * Address Suggestion
     * This operation returns suggested addresses. Use this if the [Address Validation API](https://shipping.pitneybowes.com/api/post-address-verify.html) call has returned an error.
     * @param returnSuggestions To return suggested addresses, set this to true. (required)
     * @param addressVerifySuggest Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @return ApiResponse&lt;AddressSuggestionResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AddressSuggestionResponse> verifyAndSuggestAddressWithHttpInfo(String returnSuggestions, AddressVerifySuggest addressVerifySuggest, Boolean xPBUnifiedErrorStructure) throws ApiException {
        okhttp3.Call localVarCall = verifyAndSuggestAddressValidateBeforeCall(returnSuggestions, addressVerifySuggest, xPBUnifiedErrorStructure, null);
        Type localVarReturnType = new TypeToken<AddressSuggestionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Address Suggestion (asynchronously)
     * This operation returns suggested addresses. Use this if the [Address Validation API](https://shipping.pitneybowes.com/api/post-address-verify.html) call has returned an error.
     * @param returnSuggestions To return suggested addresses, set this to true. (required)
     * @param addressVerifySuggest Address object that needs to be validated. (required)
     * @param xPBUnifiedErrorStructure Set this to true to use the standard [error object](https://shipping.pitneybowes.com/reference/error-object.html#standard-error-object) if an error occurs. (optional, default to true)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 405 </td><td> Invalid input </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call verifyAndSuggestAddressAsync(String returnSuggestions, AddressVerifySuggest addressVerifySuggest, Boolean xPBUnifiedErrorStructure, final ApiCallback<AddressSuggestionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = verifyAndSuggestAddressValidateBeforeCall(returnSuggestions, addressVerifySuggest, xPBUnifiedErrorStructure, _callback);
        Type localVarReturnType = new TypeToken<AddressSuggestionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
