/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * WeightRules
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-27T12:03:32.867+05:30[Asia/Calcutta]")
public class WeightRules {
  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_UNIT_OF_MEASUREMENT = "unitOfMeasurement";
  @SerializedName(SERIALIZED_NAME_UNIT_OF_MEASUREMENT)
  private String unitOfMeasurement;

  public static final String SERIALIZED_NAME_MIN_WEIGHT = "minWeight";
  @SerializedName(SERIALIZED_NAME_MIN_WEIGHT)
  private BigDecimal minWeight;

  public static final String SERIALIZED_NAME_MAX_WEIGHT = "maxWeight";
  @SerializedName(SERIALIZED_NAME_MAX_WEIGHT)
  private BigDecimal maxWeight;


  public WeightRules required(Boolean required) {
    
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    this.required = required;
  }


  public WeightRules unitOfMeasurement(String unitOfMeasurement) {
    
    this.unitOfMeasurement = unitOfMeasurement;
    return this;
  }

   /**
   * Get unitOfMeasurement
   * @return unitOfMeasurement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitOfMeasurement() {
    return unitOfMeasurement;
  }


  public void setUnitOfMeasurement(String unitOfMeasurement) {
    this.unitOfMeasurement = unitOfMeasurement;
  }


  public WeightRules minWeight(BigDecimal minWeight) {
    
    this.minWeight = minWeight;
    return this;
  }

   /**
   * Get minWeight
   * @return minWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMinWeight() {
    return minWeight;
  }


  public void setMinWeight(BigDecimal minWeight) {
    this.minWeight = minWeight;
  }


  public WeightRules maxWeight(BigDecimal maxWeight) {
    
    this.maxWeight = maxWeight;
    return this;
  }

   /**
   * Get maxWeight
   * @return maxWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxWeight() {
    return maxWeight;
  }


  public void setMaxWeight(BigDecimal maxWeight) {
    this.maxWeight = maxWeight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeightRules weightRules = (WeightRules) o;
    return Objects.equals(this.required, weightRules.required) &&
        Objects.equals(this.unitOfMeasurement, weightRules.unitOfMeasurement) &&
        Objects.equals(this.minWeight, weightRules.minWeight) &&
        Objects.equals(this.maxWeight, weightRules.maxWeight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(required, unitOfMeasurement, minWeight, maxWeight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeightRules {\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    unitOfMeasurement: ").append(toIndentedString(unitOfMeasurement)).append("\n");
    sb.append("    minWeight: ").append(toIndentedString(minWeight)).append("\n");
    sb.append("    maxWeight: ").append(toIndentedString(maxWeight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

