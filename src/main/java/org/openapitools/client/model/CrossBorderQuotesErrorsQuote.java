/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CrossBorderQuotesErrorsErrors;
import org.openapitools.client.model.CrossBorderQuotesErrorsQuoteLines;

/**
 * CrossBorderQuotesErrorsQuote
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-17T23:33:31.071+05:30[Asia/Calcutta]")
public class CrossBorderQuotesErrorsQuote {
  public static final String SERIALIZED_NAME_QUOTE_CURRENCY = "quoteCurrency";
  @SerializedName(SERIALIZED_NAME_QUOTE_CURRENCY)
  private String quoteCurrency;

  public static final String SERIALIZED_NAME_QUOTE_LINES = "quoteLines";
  @SerializedName(SERIALIZED_NAME_QUOTE_LINES)
  private List<CrossBorderQuotesErrorsQuoteLines> quoteLines = null;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private CrossBorderQuotesErrorsErrors errors;


  public CrossBorderQuotesErrorsQuote quoteCurrency(String quoteCurrency) {
    
    this.quoteCurrency = quoteCurrency;
    return this;
  }

   /**
   * Get quoteCurrency
   * @return quoteCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQuoteCurrency() {
    return quoteCurrency;
  }


  public void setQuoteCurrency(String quoteCurrency) {
    this.quoteCurrency = quoteCurrency;
  }


  public CrossBorderQuotesErrorsQuote quoteLines(List<CrossBorderQuotesErrorsQuoteLines> quoteLines) {
    
    this.quoteLines = quoteLines;
    return this;
  }

  public CrossBorderQuotesErrorsQuote addQuoteLinesItem(CrossBorderQuotesErrorsQuoteLines quoteLinesItem) {
    if (this.quoteLines == null) {
      this.quoteLines = new ArrayList<CrossBorderQuotesErrorsQuoteLines>();
    }
    this.quoteLines.add(quoteLinesItem);
    return this;
  }

   /**
   * Get quoteLines
   * @return quoteLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CrossBorderQuotesErrorsQuoteLines> getQuoteLines() {
    return quoteLines;
  }


  public void setQuoteLines(List<CrossBorderQuotesErrorsQuoteLines> quoteLines) {
    this.quoteLines = quoteLines;
  }


  public CrossBorderQuotesErrorsQuote errors(CrossBorderQuotesErrorsErrors errors) {
    
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CrossBorderQuotesErrorsErrors getErrors() {
    return errors;
  }


  public void setErrors(CrossBorderQuotesErrorsErrors errors) {
    this.errors = errors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrossBorderQuotesErrorsQuote crossBorderQuotesErrorsQuote = (CrossBorderQuotesErrorsQuote) o;
    return Objects.equals(this.quoteCurrency, crossBorderQuotesErrorsQuote.quoteCurrency) &&
        Objects.equals(this.quoteLines, crossBorderQuotesErrorsQuote.quoteLines) &&
        Objects.equals(this.errors, crossBorderQuotesErrorsQuote.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quoteCurrency, quoteLines, errors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrossBorderQuotesErrorsQuote {\n");
    sb.append("    quoteCurrency: ").append(toIndentedString(quoteCurrency)).append("\n");
    sb.append("    quoteLines: ").append(toIndentedString(quoteLines)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

