/*
 * Shipping API
 * Shipping API Sample.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@pb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.Parameter;

/**
 * Manifest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-27T12:03:32.867+05:30[Asia/Calcutta]")
public class Manifest {
  /**
   * Gets or Sets carrier
   */
  @JsonAdapter(CarrierEnum.Adapter.class)
  public enum CarrierEnum {
    USPS("USPS"),
    
    NEWGISTICS("NEWGISTICS"),
    
    PBPRESORT("PBPresort");

    private String value;

    CarrierEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CarrierEnum fromValue(String value) {
      for (CarrierEnum b : CarrierEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CarrierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CarrierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CarrierEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CarrierEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private CarrierEnum carrier;

  public static final String SERIALIZED_NAME_DOCUMENTS = "documents";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS)
  private List<Document> documents = null;

  public static final String SERIALIZED_NAME_FROM_ADDRESS = "fromAddress";
  @SerializedName(SERIALIZED_NAME_FROM_ADDRESS)
  private Address fromAddress;

  public static final String SERIALIZED_NAME_INDUCTION_POSTAL_CODE = "inductionPostalCode";
  @SerializedName(SERIALIZED_NAME_INDUCTION_POSTAL_CODE)
  private String inductionPostalCode;

  public static final String SERIALIZED_NAME_MANIFEST_ID = "manifestId";
  @SerializedName(SERIALIZED_NAME_MANIFEST_ID)
  private String manifestId;

  public static final String SERIALIZED_NAME_MANIFEST_TRACKING_NUMBER = "manifestTrackingNumber";
  @SerializedName(SERIALIZED_NAME_MANIFEST_TRACKING_NUMBER)
  private String manifestTrackingNumber;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<Parameter> parameters = null;

  public static final String SERIALIZED_NAME_PARCEL_TRACKING_NUMBERS = "parcelTrackingNumbers";
  @SerializedName(SERIALIZED_NAME_PARCEL_TRACKING_NUMBERS)
  private List<String> parcelTrackingNumbers = null;

  public static final String SERIALIZED_NAME_SUBMISSION_DATE = "submissionDate";
  @SerializedName(SERIALIZED_NAME_SUBMISSION_DATE)
  private String submissionDate;


  public Manifest carrier(CarrierEnum carrier) {
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @ApiModelProperty(required = true, value = "")

  public CarrierEnum getCarrier() {
    return carrier;
  }


  public void setCarrier(CarrierEnum carrier) {
    this.carrier = carrier;
  }


  public Manifest documents(List<Document> documents) {
    
    this.documents = documents;
    return this;
  }

  public Manifest addDocumentsItem(Document documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Document>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Document> getDocuments() {
    return documents;
  }


  public void setDocuments(List<Document> documents) {
    this.documents = documents;
  }


  public Manifest fromAddress(Address fromAddress) {
    
    this.fromAddress = fromAddress;
    return this;
  }

   /**
   * Get fromAddress
   * @return fromAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Address getFromAddress() {
    return fromAddress;
  }


  public void setFromAddress(Address fromAddress) {
    this.fromAddress = fromAddress;
  }


  public Manifest inductionPostalCode(String inductionPostalCode) {
    
    this.inductionPostalCode = inductionPostalCode;
    return this;
  }

   /**
   * Get inductionPostalCode
   * @return inductionPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInductionPostalCode() {
    return inductionPostalCode;
  }


  public void setInductionPostalCode(String inductionPostalCode) {
    this.inductionPostalCode = inductionPostalCode;
  }


  public Manifest manifestId(String manifestId) {
    
    this.manifestId = manifestId;
    return this;
  }

   /**
   * Get manifestId
   * @return manifestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getManifestId() {
    return manifestId;
  }


  public void setManifestId(String manifestId) {
    this.manifestId = manifestId;
  }


  public Manifest manifestTrackingNumber(String manifestTrackingNumber) {
    
    this.manifestTrackingNumber = manifestTrackingNumber;
    return this;
  }

   /**
   * Get manifestTrackingNumber
   * @return manifestTrackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getManifestTrackingNumber() {
    return manifestTrackingNumber;
  }


  public void setManifestTrackingNumber(String manifestTrackingNumber) {
    this.manifestTrackingNumber = manifestTrackingNumber;
  }


  public Manifest parameters(List<Parameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public Manifest addParametersItem(Parameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<Parameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Parameter> getParameters() {
    return parameters;
  }


  public void setParameters(List<Parameter> parameters) {
    this.parameters = parameters;
  }


  public Manifest parcelTrackingNumbers(List<String> parcelTrackingNumbers) {
    
    this.parcelTrackingNumbers = parcelTrackingNumbers;
    return this;
  }

  public Manifest addParcelTrackingNumbersItem(String parcelTrackingNumbersItem) {
    if (this.parcelTrackingNumbers == null) {
      this.parcelTrackingNumbers = new ArrayList<String>();
    }
    this.parcelTrackingNumbers.add(parcelTrackingNumbersItem);
    return this;
  }

   /**
   * Get parcelTrackingNumbers
   * @return parcelTrackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getParcelTrackingNumbers() {
    return parcelTrackingNumbers;
  }


  public void setParcelTrackingNumbers(List<String> parcelTrackingNumbers) {
    this.parcelTrackingNumbers = parcelTrackingNumbers;
  }


  public Manifest submissionDate(String submissionDate) {
    
    this.submissionDate = submissionDate;
    return this;
  }

   /**
   * Get submissionDate
   * @return submissionDate
  **/
  @ApiModelProperty(required = true, value = "")

  public String getSubmissionDate() {
    return submissionDate;
  }


  public void setSubmissionDate(String submissionDate) {
    this.submissionDate = submissionDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Manifest manifest = (Manifest) o;
    return Objects.equals(this.carrier, manifest.carrier) &&
        Objects.equals(this.documents, manifest.documents) &&
        Objects.equals(this.fromAddress, manifest.fromAddress) &&
        Objects.equals(this.inductionPostalCode, manifest.inductionPostalCode) &&
        Objects.equals(this.manifestId, manifest.manifestId) &&
        Objects.equals(this.manifestTrackingNumber, manifest.manifestTrackingNumber) &&
        Objects.equals(this.parameters, manifest.parameters) &&
        Objects.equals(this.parcelTrackingNumbers, manifest.parcelTrackingNumbers) &&
        Objects.equals(this.submissionDate, manifest.submissionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrier, documents, fromAddress, inductionPostalCode, manifestId, manifestTrackingNumber, parameters, parcelTrackingNumbers, submissionDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Manifest {\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    inductionPostalCode: ").append(toIndentedString(inductionPostalCode)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    manifestTrackingNumber: ").append(toIndentedString(manifestTrackingNumber)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    parcelTrackingNumbers: ").append(toIndentedString(parcelTrackingNumbers)).append("\n");
    sb.append("    submissionDate: ").append(toIndentedString(submissionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

